# Rex Lei rexlei86@uvic.ca
# parse the coordinates data from the file generated by leapmotion

import sys, glob, os,csv

def parser2(filename):
	raw = open(filename)
	fbname = filename.split('.')[0]
	pfile = open("../"+fbname+".txt", "w")
	pFre = open("../statistics/"+fbname+"Stat.txt", "w")
	csvFp = csv.writer(open("../"+fbname+".csv", 'w'))	

	freqency = [0,0,0,0,0]
	rowlines = []
	xsi = []
	ysi = []
	zsi = []
	xso = []
	yso = []
	zso = []

	for line in raw:
		if len(line) > 2:
			if line[:2] == "fx":
				rowlines.append(line)
			elif line[:2] == "**":
				rowlinesLen = len(rowlines)
				if rowlinesLen == 1:
					freqency[0] = freqency[0] + 1
				if rowlinesLen == 2:
					freqency[1] = freqency[1] + 1
				if rowlinesLen == 3:
					freqency[2] = freqency[2] + 1
				if rowlinesLen == 4:
					freqency[3] = freqency[3] + 1
				if rowlinesLen == 5:
					freqency[4] = freqency[4] + 1

				x,y,z = rowlines[0].split('\t')
				x = x[3:]
				y = y[3:]
				z = z[3:]
				rowlines = []
			 	# print x+" "+y+" "+z
			 	pfile.write(x+" "+y+" "+z)
			 	csvFp.writerow([x,y,z])
			 	xsi.append(x)
			 	ysi.append(y)
			 	zsi.append(z)

	raw.close()
	pfile.close()
	pFre.write(', '.join(map(str, freqency)))
	print freqency
	pFre.close()

	for x in xrange(50):
		xsi = triangularSmoothing(xsi)
		ysi = triangularSmoothing(ysi)
		zsi = triangularSmoothing(zsi)
	if len(xsi) == len(ysi) and len(xsi) == len(zsi):
		fpTriangular = csv.writer(open("../triangular/"+fbname+".csv", 'w'))
		for x in range(len(xsi)):
			fpTriangular.writerow([xsi[x],ysi[x],zsi[x]])


def parser(filename):
	raw = open(filename)
	fbname = filename.split('.')[0]
	pfile = open("../"+fbname+"Parsed.txt", "w")

	for line in raw:
		if len(line) > 2:
			if line[:2] == "fx":
				x,y,z = line.split('\t')
				x = x[3:]
				y = y[3:]
				z = z[3:]
			 	# print x+" "+y+" "+z
			 	pfile.write(x+" "+y+" "+z)

	raw.close()
	pfile.close()

def scanFiles(directory):
	fList = []
	os.chdir(directory)
	for filename in glob.glob("*.txt"):
	    print filename
	    fList.append(filename)

	return fList

def triangularSmoothing(inputArr):
	pointCnt = len(inputArr)
	if pointCnt < 5:
		return []

	output = []
	output.append((3*float(inputArr[0])+2*float(inputArr[1])+float(inputArr[2]))/6.0)
	output.append((2*float(inputArr[0])+3*float(inputArr[1])+2*float(inputArr[2])+float(inputArr[3]))/6.0)
	for x in range(2,pointCnt-2):
		output.append((float(inputArr[x-2])+2*float(inputArr[x-1])+3*float(inputArr[x])+2*float(inputArr[x+1])+float(inputArr[x+2]))/9.0)

	output.append((float(inputArr[pointCnt-4])+2*float(inputArr[pointCnt-3])+3*float(inputArr[pointCnt-2])+2*float(inputArr[pointCnt-1]))/8.0)
	output.append((float(inputArr[pointCnt-3])+2*float(inputArr[pointCnt-2])+3*float(inputArr[pointCnt-1]))/6.0)

	print output
	return output

def test(inp):
	inp = inp + 1
	print "inp:", inp

def main():
	# parser(sys.argv[1])
	fList = scanFiles(sys.argv[1])
	for filename in fList:
		parser2(filename)
	# inp = [1,2,3,4,5]
	# for x in xrange(0,10):
	# 	inp = triangularSmoothing(inp)
	# print "out inp:",inp



if __name__ == '__main__':
	main()